pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/Evgeny-Nik/project_kubernetes_jenkins_docker_ci_cd.git'
        GIT_BRANCH = 'master'
        GIT_CRED_ID = 'kubernetes_jenkins_docker_github_user_token'
        MANIFEST_DIR = 'k8s_files'
        MANIFEST_PATH = 'k8s_files/deployment.yaml'
        AWS_REGION = 'eu-north-1'
        EKS_CLUSTER_NAME = 'pc-eks'
        DEPLOYMENT_NAME = 'weather-app-deployment'
    }

    stages {
        stage('Check Changes') {
            steps {
                git branch: "${GIT_BRANCH}", credentialsId: "${GIT_CRED_ID}", url: "${GIT_REPO}"
            }
        }

        stage('Read Replicas from Deployment YAML') {
            steps {
                script {
                    def yamlContent = readYaml(file: MANIFEST_PATH)
                    def replicas = yamlContent.spec.replicas

                    // Check if replicas value is valid
                    if (!replicas.isInteger()) {
                        error "Replicas value (${replicas}) is not a valid integer."
                    }

                    // Use replicas value in subsequent steps
                    echo "Using ${replicas} replicas."
                }
            }
        }

        stage('Configure AWS and Kubernetes') {
            steps {
                withAWS(credentials: 'eks-admin', region: AWS_REGION) {
                    sh """
                    aws eks update-kubeconfig --region ${AWS_REGION} --name ${EKS_CLUSTER_NAME}
                    kubectl apply -f ${MANIFEST_DIR}
                    """
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                sh '''
                    kubectl get deploy,pods,service,ingress -o wide
                '''
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
